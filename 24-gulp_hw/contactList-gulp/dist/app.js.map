{"version":3,"file":"app.js","sources":["app.js"],"sourcesContent":["class ContactsApi {\r\n    static API = `https://6425805b7ac292e3cf0278f7.mockapi.io/api/contacts/`\r\n    static request(url = '', method = 'GET', errorMessage, body) {\r\n        return fetch(ContactsApi.API + url, {\r\n            method,\r\n            body: body ? JSON.stringify(body) : undefined,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json()\r\n                }\r\n\r\n                throw new Error(`${errorMessage}`);\r\n\r\n            })\r\n    }\r\n\r\n    static getList() {\r\n        return ContactsApi.request('', 'GET', 'cant retrieve contact list from server')\r\n    }\r\n\r\n    static create(contact) {\r\n        return ContactsApi.request('', 'POST', 'cant create contact on server', contact)\r\n    }\r\n    static delete(id) {\r\n        return ContactsApi.request(id, 'DELETE', 'cant delete contact on server')\r\n    }\r\n\r\n    static update(id, changes) {\r\n        return ContactsApi.request(id, 'PUT', 'cant update contact on server', changes)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\n'use strict'\r\nconst SELECTOR_CONTACT_INFORM = '#contactInform'\r\nconst CLASS_DELETE_BTN = 'deleteBtn'\r\nconst CLASS_EDIT_BTN = 'editBtn'\r\n\r\n\r\nconst form = document.querySelector('#contactsForm')\r\nconst $contactsContainer = $('#contactsContainer')\r\n\r\nlet contactList = []\r\n\r\nform.addEventListener('submit', onFormSubmit)\r\n$contactsContainer\r\n    .on('click', '.' + CLASS_DELETE_BTN, deleteContact)\r\n    .on('click', '.' + CLASS_EDIT_BTN, editContact)\r\n\r\n\r\nContactsApi\r\n    .getList()\r\n    .then((list) => {\r\n        renderContactsList(list)\r\n        contactList = list\r\n    })\r\n    .catch((e) => showError(e))\r\n\r\n\r\nfunction onFormSubmit(e) {\r\n    e.preventDefault()\r\n    const contact = getContactData()\r\n    if (!isValidData(contact)) {\r\n        showError(new Error('enter wrong data'))\r\n        return\r\n    }\r\n    if (contact.id) {\r\n        updateContact(contact)\r\n    } else {\r\n        createNewContact(contact)\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction updateContact(contact) {\r\n    ContactsApi\r\n        .update(contact.id, contact)\r\n        .then((newContact) => {\r\n            replaceContact(contact.id, newContact)\r\n            clearForm()\r\n            contactList = contactList.map(contact => contact.id === newContact.id ? newContact : contact)\r\n        })\r\n        .catch((e) => showError(e))\r\n}\r\n\r\nfunction createNewContact(contact) {\r\n    ContactsApi\r\n        .create(contact)\r\n        .then((newContact) => {\r\n            renderContact(newContact)\r\n            contactList.push(newContact)\r\n            clearForm()\r\n        })\r\n        .catch(e => showError(e))\r\n}\r\n\r\nfunction deleteContact(e) {\r\n    const contactEl = getContactEl(e.target)\r\n    const id = findElemettId(contactEl)\r\n    ContactsApi\r\n        .delete(id)\r\n        .catch(e => showError(e))\r\n    contactList = contactList.filter(contact => contact.id !== id)\r\n    contactEl.remove()\r\n}\r\n\r\nfunction editContact(e) {\r\n    const id = findElemettId(e.target)\r\n    const contact = findElById(id)\r\n    fillForm(contact)\r\n}\r\n\r\n\r\nfunction isValidData(contact) {\r\n    return contact.firstName\r\n        && contact.lastName\r\n        && contact.phone\r\n        && !isNaN(contact.phone)\r\n}\r\n\r\nfunction getContactData() {\r\n    const id = form.id.value\r\n    const contact = findElById(id) || {}\r\n    return {\r\n        ...contact,\r\n        firstName: form.firstName.value,\r\n        lastName: form.lastName.value,\r\n        phone: form.phone.value\r\n    }\r\n}\r\n\r\nfunction replaceContact(id, contact) {\r\n    const oldContact = document.querySelector(`[data-id = \"${id}\"]`)\r\n    const newContact = getTemplateContsct(contact)\r\n    oldContact.outerHTML = newContact\r\n}\r\n\r\nfunction renderContactsList(list) {\r\n    const html = list.map(getTemplateContsct)\r\n    $contactsContainer.html(html)\r\n}\r\n\r\nfunction renderContact(contact) {\r\n    const html = getTemplateContsct(contact)\r\n    $contactsContainer.append(html)\r\n}\r\nfunction getTemplateContsct(contact) {\r\n\r\n    return `\r\n    <tr id = \"contactInform\" \r\n    data-id = \"${contact.id}\">\r\n        <td>${contact.firstName}</td>\r\n        <td>${contact.lastName}</td>\r\n        <td>${contact.phone}</td>\r\n        <td><button class=\"${CLASS_EDIT_BTN}\">Edit</button></td>\r\n        <td><button class=\"${CLASS_DELETE_BTN}\">Delete</button></td>\r\n    </tr> \r\n    `\r\n}\r\n\r\nfunction getContactEl(element) {\r\n    return element.closest(SELECTOR_CONTACT_INFORM)\r\n}\r\n\r\nfunction findElemettId(el) {\r\n    const contactEl = getContactEl(el)\r\n    return contactEl.dataset.id\r\n}\r\n\r\nfunction findElById(id) {\r\n    return contactList.find(contact => contact.id === id)\r\n}\r\n\r\nfunction fillForm(contact) {\r\n    form.firstName.value = contact.firstName\r\n    form.lastName.value = contact.lastName\r\n    form.phone.value = contact.phone\r\n    form.id.value = contact.id\r\n}\r\n\r\nfunction clearForm() {\r\n    form.id.value = ''\r\n    form.reset()\r\n}\r\n\r\nfunction showError(e) {\r\n    alert(e.message)\r\n}"],"names":["ContactsApi","API","request","url","method","errorMessage","body","fetch","JSON","stringify","undefined","headers","Content-type","then","res","ok","json","Error","getList","create","contact","delete","id","update","changes","SELECTOR_CONTACT_INFORM","CLASS_DELETE_BTN","CLASS_EDIT_BTN","form","document","querySelector","$contactsContainer","$","let","contactList","onFormSubmit","e","preventDefault","getContactData","isValidData","updateContact","createNewContact","showError","replaceContact","newContact","clearForm","map","catch","renderContact","push","deleteContact","contactEl","getContactEl","target","findElemettId","filter","remove","editContact","fillForm","findElById","firstName","lastName","phone","isNaN","value","oldContact","getTemplateContsct","outerHTML","renderContactsList","list","html","append","element","closest","el","dataset","find","reset","alert","message","addEventListener","on"],"mappings":"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"}